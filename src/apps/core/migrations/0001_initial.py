# Generated by Django 4.2.7 on 2025-09-10 07:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=500)),
                ('answer', models.TextField()),
                ('category', models.CharField(choices=[('general', 'General'), ('trading', 'Trading & Packages'), ('payments', 'Payments & Withdrawals'), ('security', 'Security & Account'), ('technical', 'Technical Support')], default='general', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('helpful_votes', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['category', 'order', '-is_featured'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='TradeVision', max_length=100)),
                ('site_description', models.TextField(default='Smart Trading Platform')),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('site_favicon', models.ImageField(blank=True, null=True, upload_to='site/')),
                ('contact_email', models.EmailField(default='support@tradevision.com', max_length=254)),
                ('contact_phone', models.CharField(default='+254 700 000 000', max_length=20)),
                ('contact_address', models.TextField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('telegram_url', models.URLField(blank=True)),
                ('whatsapp_url', models.URLField(blank=True)),
                ('trading_start_time', models.TimeField(default='08:00')),
                ('trading_end_time', models.TimeField(default='18:00')),
                ('weekend_trading_enabled', models.BooleanField(default=False)),
                ('total_users', models.IntegerField(default=0)),
                ('total_invested', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_profits_paid', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('platform_uptime', models.DecimalField(decimal_places=2, default=99.9, max_digits=5)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_number', models.CharField(max_length=20, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('account', 'Account Issues'), ('trading', 'Trading Problems'), ('payments', 'Payment Issues'), ('technical', 'Technical Support'), ('general', 'General Inquiry'), ('complaint', 'Complaint')], default='general', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('waiting_customer', 'Waiting for Customer'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='support_attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.supportticket')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsUpdate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True, max_length=300)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='news/')),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('view_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'News Update',
                'verbose_name_plural': 'News Updates',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('announcement_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('success', 'Success'), ('danger', 'Danger'), ('maintenance', 'Maintenance')], default='info', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('show_to_all_users', models.BooleanField(default=True)),
                ('show_to_authenticated_only', models.BooleanField(default=False)),
                ('show_on_dashboard', models.BooleanField(default=True)),
                ('show_on_homepage', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('target_countries', models.JSONField(blank=True, default=list)),
                ('target_packages', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('registration', 'User Registration'), ('investment', 'Investment Created'), ('trade', 'Trade Executed'), ('withdrawal', 'Withdrawal Request'), ('deposit', 'Deposit Made'), ('admin_action', 'Admin Action'), ('system_error', 'System Error')], max_length=20)),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=10)),
                ('message', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['action_type', '-created_at'], name='core_system_action__4d3932_idx'), models.Index(fields=['user', '-created_at'], name='core_system_user_id_ff634e_idx'), models.Index(fields=['level', '-created_at'], name='core_system_level_556847_idx')],
            },
        ),
    ]
