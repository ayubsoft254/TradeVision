# TradeVision Testing Commands

## Management Commands for Sample Data Creation

### Announcements
# Create basic announcements
python manage.py create_announcements

# Create announcements with custom count and clear existing
python manage.py create_announcements --count 5 --clear-first

# Create visible announcements for immediate display
python manage.py create_visible_announcements

### News Articles  
# Create 5 published news articles
python manage.py create_news_articles

# Create 10 articles and clear existing
python manage.py create_news_articles --count 10 --clear-first

# Create draft articles (unpublished)
python manage.py create_news_articles --count 3 --unpublished

## URLs to Test

### Homepage
http://127.0.0.1:8000/

### News System
http://127.0.0.1:8000/news/
http://127.0.0.1:8000/news/tradevision-launches-advanced-ai-trading-algorithm/
http://127.0.0.1:8000/news/market-analysis-cryptocurrency-trends-for-q4-2025/

### Admin Interface  
http://127.0.0.1:8000/admin/core/announcement/
http://127.0.0.1:8000/admin/core/newsupdate/
http://127.0.0.1:8000/admin/core/newsupdate/add/

## Django Shell Testing

### Check Database Content
python manage.py shell

# In shell:
from apps.core.models import Announcement, NewsUpdate
print(f"Announcements: {Announcement.objects.count()}")
print(f"Published News: {NewsUpdate.objects.filter(is_published=True).count()}")

# View announcement details
for a in Announcement.objects.all():
    print(f"- {a.title} (Priority: {a.priority}, Active: {a.is_active})")

# View news article details  
for n in NewsUpdate.objects.filter(is_published=True):
    print(f"- {n.title} (Slug: {n.slug}, Views: {n.view_count})")

## Development Server
python manage.py runserver

## Debugging Commands
# Check for any errors
python manage.py check

# Apply any pending migrations
python manage.py migrate

# Collect static files (if needed)
python manage.py collectstatic --noinput

## Sample Admin User Creation (if needed)
python manage.py createsuperuser